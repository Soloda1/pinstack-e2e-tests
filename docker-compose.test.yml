services:
  ######################
  # Postgres (user-service)
  ######################
  user-db-test:
    image: postgres:16-alpine
    container_name: pinstack-user-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: userservice_test
      POSTGRES_PORT: 5432
      # Оптимизация для минимального потребления памяти
      POSTGRES_INITDB_ARGS: "--data-checksums"
    command: >
      postgres -p 5432
      -c shared_buffers=64MB
      -c effective_cache_size=128MB
      -c maintenance_work_mem=32MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=8MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=2MB
      -c min_wal_size=80MB
      -c max_wal_size=1GB
      -c max_connections=50
    ports:
      - "42432:5432"
    networks:
      - pinstack-test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
    # Для GitHub Actions - обычные volumes, но без named volumes
    # При docker compose down -v все удалится
    shm_size: 128mb

  user-migrator-test:
    container_name: pinstack-user-migrator-test
    build:
      context: ../pinstack-user-service
      dockerfile: Dockerfile.migrator
    depends_on:
      user-db-test:
        condition: service_healthy
    volumes:
      - ../pinstack-user-service/migrations:/app/migrations:ro
      - ./config/user-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
    networks:
      - pinstack-test
    command: ./migrator -command up

  pgadmin-test:
    image: dpage/pgadmin4:latest
    container_name: pinstack-user-pgadmin-test
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
      # Минимальные настройки для экономии памяти
      PGADMIN_CONFIG_SESSION_EXPIRATION_TIME: 1
      PGADMIN_CONFIG_CHECK_SESSION_FILES_INTERVAL: 30
    ports:
      - "42050:5050"
    depends_on:
      user-db-test:
        condition: service_healthy
    networks:
      - pinstack-test

  user-service-test:
    container_name: pinstack-user-service-test
    build:
      context: ../pinstack-user-service
      dockerfile: Dockerfile
    depends_on:
      user-migrator-test:
        condition: service_completed_successfully
    volumes:
      - ./config/user-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
      # Ограничиваем память для Go сервиса
      - GOMEMLIMIT=100MiB
      - GOGC=50
    networks:
      - pinstack-test
    ports:
      - "42051:50051"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
    # Ограничиваем ресурсы
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  ######################
  # Postgres (auth-service)
  ######################
  auth-db-test:
    image: postgres:16-alpine
    container_name: pinstack-auth-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: authservice_test
      POSTGRES_PORT: 5432
    command: >
      postgres -p 5432
      -c shared_buffers=64MB
      -c effective_cache_size=128MB
      -c maintenance_work_mem=32MB
      -c work_mem=2MB
      -c max_connections=50
    ports:
      - "42433:5432"
    networks:
      - pinstack-test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
    shm_size: 128mb
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  auth-migrator-test:
    container_name: pinstack-auth-migrator-test
    build:
      context: ../pinstack-auth-service
      dockerfile: Dockerfile.migrator
    depends_on:
      auth-db-test:
        condition: service_healthy
    volumes:
      - ../pinstack-auth-service/migrations:/app/migrations:ro
      - ./config/auth-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
    networks:
      - pinstack-test
    command: ./migrator -command up

  auth-service-test:
    container_name: pinstack-auth-service-test
    build:
      context: ../pinstack-auth-service
      dockerfile: Dockerfile
    depends_on:
      auth-migrator-test:
        condition: service_completed_successfully
      user-service-test:
        condition: service_started
    volumes:
      - ./config/auth-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
      - GOMEMLIMIT=100MiB
      - GOGC=50
    networks:
      - pinstack-test
    ports:
      - "42052:50052"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  ######################
  # Postgres (post-service)
  ######################
  post-db-test:
    image: postgres:16-alpine
    container_name: pinstack-post-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postservice_test
      POSTGRES_PORT: 5432
    command: >
      postgres -p 5432
      -c shared_buffers=64MB
      -c effective_cache_size=128MB
      -c maintenance_work_mem=32MB
      -c work_mem=2MB
      -c max_connections=50
    ports:
      - "42434:5432"
    networks:
      - pinstack-test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
    shm_size: 128mb
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  post-migrator-test:
    container_name: pinstack-post-migrator-test
    build:
      context: ../pinstack-post-service
      dockerfile: Dockerfile.migrator
    depends_on:
      post-db-test:
        condition: service_healthy
    volumes:
      - ../pinstack-post-service/migrations:/app/migrations:ro
      - ./config/post-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
    networks:
      - pinstack-test
    command: ./migrator -command up

  post-service-test:
    container_name: pinstack-post-service-test
    build:
      context: ../pinstack-post-service
      dockerfile: Dockerfile
    depends_on:
      post-migrator-test:
        condition: service_completed_successfully
      user-service-test:
        condition: service_started
    volumes:
      - ./config/post-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
      - GOMEMLIMIT=100MiB
      - GOGC=50
    networks:
      - pinstack-test
    ports:
      - "42053:50053"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  ######################
  # Postgres (relation-service)
  ######################
  relation-db-test:
    image: postgres:16-alpine
    container_name: pinstack-relation-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: relationservice_test
      POSTGRES_PORT: 5432
    command: >
      postgres -p 5432
      -c shared_buffers=64MB
      -c effective_cache_size=128MB
      -c maintenance_work_mem=32MB
      -c work_mem=2MB
      -c max_connections=50
    ports:
      - "42435:5432"
    networks:
      - pinstack-test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
    shm_size: 128mb
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  relation-migrator-test:
    container_name: pinstack-relation-migrator-test
    build:
      context: ../pinstack-relation-service
      dockerfile: Dockerfile.migrator
    depends_on:
      relation-db-test:
        condition: service_healthy
    volumes:
      - ../pinstack-relation-service/migrations:/app/migrations:ro
      - ./config/relation-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
    networks:
      - pinstack-test
    command: ./migrator -command up

  relation-service-test:
    container_name: pinstack-relation-service-test
    build:
      context: ../pinstack-relation-service
      dockerfile: Dockerfile
    depends_on:
      relation-migrator-test:
        condition: service_completed_successfully
      user-service-test:
        condition: service_started
      kafka-topics-init-test:
        condition: service_completed_successfully
    volumes:
      - ./config/relation-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
      - GOMEMLIMIT=100MiB
      - GOGC=50
    networks:
      - pinstack-test
    ports:
      - "42054:50054"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  ##################
  # API Gateway
  ##################
  api-gateway-test:
    container_name: pinstack-api-gateway-test
    build:
      context: ../pinstack-api-gateway
      dockerfile: Dockerfile
    depends_on:
      - user-service-test
      - auth-service-test
    volumes:
      - ./config/api-gateway/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
      - GOMEMLIMIT=100MiB
      - GOGC=50
    networks:
      - pinstack-test
    ports:
      - "42080:8080"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  ##################
  # Kafka (упрощенная конфигурация для экономии памяти)
  ##################
  kafka-test:
    image: confluentinc/cp-kafka:latest
    container_name: pinstack-kafka-test
    hostname: kafka-test
    ports:
      - "42092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-test:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-test:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'TEST3OEVBNTcwNTJENDM2Qk'
      # Минимальные настройки для экономии памяти
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      # Логирование только ошибок
      KAFKA_LOG4J_ROOT_LOGLEVEL: "ERROR"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka=ERROR,kafka=ERROR"
      KAFKA_TOOLS_LOG4J_LOGLEVEL: "ERROR"
      # Ограничение памяти
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
      KAFKA_JVM_PERFORMANCE_OPTS: "-XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35"
    networks:
      - pinstack-test
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka-test:9092 --list > /dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M

  ##################
  # Kafka Topics Initialization (упрощенная)
  ##################
  kafka-topics-init-test:
    image: confluentinc/cp-kafka:latest
    container_name: pinstack-kafka-topics-init-test
    depends_on:
      kafka-test:
        condition: service_healthy
    networks:
      - pinstack-test
    command: >
      bash -c "
        echo 'Ожидаем готовности Kafka...'
        sleep 5
      
        BOOTSTRAP_SERVERS='kafka-test:9092'
      
        echo 'Создаем топик relation-events...'
        kafka-topics --bootstrap-server \$$BOOTSTRAP_SERVERS --create --topic relation-events --partitions 1 --replication-factor 1 --if-not-exists
      
        echo 'Список топиков:'
        kafka-topics --bootstrap-server \$$BOOTSTRAP_SERVERS --list
      
        echo 'Инициализация завершена!'
      "
    restart: "no"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "1"

  ######################
  # Postgres (notification-service)
  ######################
  notification-db-test:
    image: postgres:16-alpine
    container_name: pinstack-notification-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: notificationservice_test
      POSTGRES_PORT: 5432
    command: >
      postgres -p 5432
      -c shared_buffers=64MB
      -c effective_cache_size=128MB
      -c maintenance_work_mem=32MB
      -c work_mem=2MB
      -c max_connections=50
    ports:
      - "42436:5432"
    networks:
      - pinstack-test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
    shm_size: 128mb
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  notification-migrator-test:
    container_name: pinstack-notification-migrator-test
    build:
      context: ../pinstack-notification-service
      dockerfile: Dockerfile.migrator
    depends_on:
      notification-db-test:
        condition: service_healthy
    volumes:
      - ../pinstack-notification-service/migrations:/app/migrations:ro
      - ./config/notification-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
    networks:
      - pinstack-test
    command: ./migrator -command up

  notification-service-test:
    container_name: pinstack-notification-service-test
    build:
      context: ../pinstack-notification-service
      dockerfile: Dockerfile
    depends_on:
      notification-migrator-test:
        condition: service_completed_successfully
      user-service-test:
        condition: service_started
      relation-service-test:
        condition: service_started
      kafka-topics-init-test:
        condition: service_completed_successfully
    volumes:
      - ./config/notification-service/test-config.yaml:/app/config/config.yaml:ro
    environment:
      - ENV=test
      - GOMEMLIMIT=100MiB
      - GOGC=50
    networks:
      - pinstack-test
    ports:
      - "42055:50055"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  pinstack-test:
    driver: bridge